// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sodio_API_Task.Models;

#nullable disable

namespace Sodio_API_Task.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20241211071213_tablecreationandseedingdata")]
    partial class tablecreationandseedingdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sodio_API_Task.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Good Morning",
                            DueDate = new DateTime(2024, 12, 11, 12, 42, 13, 205, DateTimeKind.Local).AddTicks(1264),
                            Status = 2,
                            Title = "Morning"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Good Afternoon",
                            DueDate = new DateTime(2024, 12, 11, 12, 42, 13, 205, DateTimeKind.Local).AddTicks(1277),
                            Status = 1,
                            Title = "Afternoon"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Good Evening",
                            DueDate = new DateTime(2024, 12, 11, 12, 42, 13, 205, DateTimeKind.Local).AddTicks(1278),
                            Status = 0,
                            Title = "Evening"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Good Night",
                            DueDate = new DateTime(2024, 12, 11, 12, 42, 13, 205, DateTimeKind.Local).AddTicks(1280),
                            Status = 0,
                            Title = "Night"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
